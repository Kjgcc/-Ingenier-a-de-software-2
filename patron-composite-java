package co.edu.poli;

import java.util.ArrayList;
import java.util.List;

// Interfaz Componente (Común para Empleados y Departamentos)
interface Componente {
    void mostrarDetalles();
}

// Clase Hoja: Empleado
class Empleado implements Componente {
    private String nombre;
    private String cargo;

    public Empleado(String nombre, String cargo) {
        this.nombre = nombre;
        this.cargo = cargo;
    }

    @Override
    public void mostrarDetalles() {
        System.out.println("Empleado: " + nombre + ", Cargo: " + cargo);
    }
}

// Clase Compuesto: Departamento (puede contener empleados y otros departamentos)
class Departamento implements Componente {
    private String nombre;
    private List<Componente> componentes = new ArrayList<>();

    public Departamento(String nombre) {
        this.nombre = nombre;
    }

    public void agregarComponente(Componente componente) {
        componentes.add(componente);
    }

    @Override
    public void mostrarDetalles() {
        System.out.println("Departamento: " + nombre);
        for (Componente componente : componentes) {
            componente.mostrarDetalles();
        }
    }
}


package co.edu.poli;

//Clase Principal
public class Main {
 public static void main(String[] args) {
     // Crear empleados
     Empleado emp1 = new Empleado("Juan", "Desarrollador");
     Empleado emp2 = new Empleado("Maria", "Diseñadora");
     Empleado emp3 = new Empleado("Carlos", "Gerente de Ventas");

     // Crear departamentos
     Departamento tecnologia = new Departamento("Tecnología");
     Departamento ventas = new Departamento("Ventas");
     Departamento recursosHumanos = new Departamento("Recursos Humanos");

     // Agregar empleados a varios departamentos
     tecnologia.agregarComponente(emp1);
     tecnologia.agregarComponente(emp2);
     ventas.agregarComponente(emp1);  // Juan también está en Ventas
     ventas.agregarComponente(emp3);
     recursosHumanos.agregarComponente(emp2);  // Maria también está en RRHH

     // Crear departamento principal y agregar subdepartamentos
     Departamento empresa = new Departamento("Empresa");
     empresa.agregarComponente(tecnologia);
     empresa.agregarComponente(ventas);
     empresa.agregarComponente(recursosHumanos);

     // Mostrar estructura completa
     System.out.println("=== Estructura de la Empresa ===");
     empresa.mostrarDetalles();
 }
}
